# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

image: node:16

# variables:
#   FF_USE_FASTZIP: "true"
#   ARTIFACT_COMPRESSION_LEVEL: fastest
#   CACHE_COMPRESSION_LEVEL: fastest
#   TRANSFER_METER_FREQUENCY: 5s
#   NETLIFY_ACCESS_TOKEN: $NETLIFY_ACCESS_TOKEN
#   NETLIFY_API_ID: $NETLIFY_API_ID

cache:
  key:
    files:
      - package-lock.json
  paths:
    - node_modules/

stages:
  - pre-build
  - format
#   - test
#   - deploy

install:
  stage: pre-build
  script:
    - npm install
  artifacts:
    paths:
      - node_modules/

linter:
  stage: format
  script:
    - npm run lint

prettier:
  stage: format
  script:
    - npm run format

# test:
#   stage: test
#   script:
#     - npm run jest

# deploy:
#   stage: deploy
#   rules:
#     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#   script:
#     - npm run build
#     - npx netlify-cli deploy --site "$NETLIFY_API_ID" --auth "$NETLIFY_ACCESS_TOKEN" --prod
